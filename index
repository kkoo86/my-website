<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>ส่ง Flex Message ผ่าน LINE</title>


    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for the warning icon -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://static.line-scdn.net/liff/edge/2/sdk.js"></script>


    <style>
        * { box-sizing: border-box; font-family: 'Noto Sans', sans-serif; }
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            height: 100vh;
            background: linear-gradient(90deg, rgba(252, 233, 227, 1) 0%, rgba(223, 235, 241, 1) 20%, rgba(253, 245, 235, 1) 60%, rgba(255, 255, 255, 1) 71%);
            background-size: cover;
            flex-direction: column;
        }


        .container {
            background-color: #ffffff;
            padding: 2rem;
            box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
            border-radius: 12px;
            text-align: center;
            width: 350px;
            max-width: 100%;
            transition: transform 0.3s ease-in-out;
        }


        .container:hover {
            transform: scale(1.03);
        }


        /* Styled warning box */
        .warning-box {
            background-color: #fff3cd;
            border: 1px solid #ffeeba;
            color: #856404;
            padding: 12px;
            margin-bottom: 20px;
            border-radius: 8px;
            font-size: 16px;
            display: flex;
            align-items: center;
        }


        .warning-box i {
            margin-right: 10px;
            font-size: 24px;
        }


        h1 {
            font-size: 1.75rem;
            margin-bottom: 1.5rem;
            font-weight: 700;
            color: #333;
        }


        input, textarea {
            width: 100%;
            border-radius: 8px;
            border: 1px solid #ddd;
            padding: 10px;
            font-size: 14px;
            margin-bottom: 15px;
        }


        input:focus, textarea:focus {
            outline: none;
            border-color: #007bff;
        }


        button {
            width: 100%;
            border-radius: 8px;
            padding: 12px;
            font-size: 16px;
            margin: 8px 0;
            transition: background-color 0.3s;
        }


        button:hover {
            background-color: #0056b3;
            color: #fff;
        }


        button:disabled {
            background-color: #ccc;
        }


        textarea[readonly] {
            background-color: #f8f9fa;
            color: #6c757d;
        }


        /* Allow resizing textarea vertically */
        textarea {
            resize: vertical;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Warning box with the message and exclamation icon -->
        <div id="warningBox" class="warning-box" style="display: none;">
            <i class="fas fa-exclamation-triangle"></i>
            <span>กรุณาเปิดในเบราว์เซอร์เริ่มต้นภายนอก LINE เพื่อใช้ฟีเจอร์นี้</span>
        </div>


        <h1>ส่ง Flex Message</h1>
        <!-- Textarea for altText with rows="2" -->
        <textarea id="altTextInput" class="form-control mb-2" placeholder="กรอกข้อความ Alt Text สำหรับ Flex Message" rows="2"></textarea>


        <!-- Button to paste content from clipboard -->
        <button onclick="pasteFromClipboard()" id="pasteButton" class="btn btn-info mb-2">วางจากคลิปบอร์ด</button>


        <!-- Updated Textarea to support long text and auto-resize -->
        <textarea id="jsonInput" class="form-control mb-2" placeholder="วางหรือกรอกรหัส JSON สำหรับ Flex Message" rows="10"></textarea>


        <button onclick="shareFlexMessage()" class="btn btn-primary mb-2">ส่งข้อความ</button>
        <button onclick="resetFields()" class="btn btn-secondary">รีเซ็ต</button>
    </div>


    <script>
        const myLiffId = "2006557285-yVw8NeJQ"; // ใส่ LIFF ID ของคุณที่นี่


        function initializeLiff() {
            liff.init({ liffId: myLiffId })
            .then(() => {
                if (!liff.isLoggedIn()) {
                    liff.login();
                }


                // เช็คว่าแอปทำงานใน LINE หรือไม่ แสดงกล่องคำเตือนหากใช่
                if (liff.isInClient()) {
                    document.getElementById("warningBox").style.display = "block";
                }
            })
            .catch((err) => {
                console.error("การเริ่มต้น LIFF ล้มเหลว", err);
                Swal.fire("การเชื่อมต่อ LIFF ล้มเหลว โปรดตรวจสอบ LIFF ID ของคุณ");
            });
        }


        document.addEventListener("DOMContentLoaded", function() {
            initializeLiff();
            loadJSONFromURL();
        });


        function loadJSONFromURL() {
            const urlParams = new URLSearchParams(window.location.search);
            const jsonData = urlParams.get("json");
            if (jsonData) {
                try {
                    const parsedJSON = JSON.parse(jsonData);
                    document.getElementById("jsonInput").value = JSON.stringify(parsedJSON, null, 2);
                    disableJsonInput(); // ปิดการแก้ไขหลังจากโหลด
                } catch (error) {
                    console.error("เกิดข้อผิดพลาดในการแปลง JSON จาก URL:", error);
                    Swal.fire("รหัส JSON ไม่ถูกต้อง โปรดตรวจสอบและลองใหม่");
                }
            }
        }


        function shareFlexMessage() {
            const jsonInput = document.getElementById("jsonInput").value;
            const altText = document.getElementById("altTextInput").value || "นี่คือ Flex Message";


            if (!jsonInput) {
                Swal.fire("กรุณากรอกรหัส JSON ก่อนส่ง");
                return;
            }


            let flexMessage;
            try {
                flexMessage = JSON.parse(jsonInput);
            } catch (error) {
                Swal.fire("รหัส JSON ไม่ถูกต้อง โปรดตรวจสอบและลองใหม่");
                return;
            }


            if (!liff.isLoggedIn()) {
                liff.login();
                return;
            }


            if (flexMessage.type !== "bubble" && flexMessage.type !== "carousel") {
                Swal.fire("โครงสร้าง JSON ของ Flex Message ไม่ถูกต้อง");
                return;
            }


            liff.shareTargetPicker([{ type: "flex", altText: altText, contents: flexMessage }])
            .then(() => {
                Swal.fire("ส่งข้อความสำเร็จ!");
            })
            .catch((err) => {
                console.error("การแชร์ล้มเหลว", err);
                Swal.fire("เกิดข้อผิดพลาดขณะส่งข้อความ");
            });
        }


        function resetFields() {
            document.getElementById("altTextInput").value = "";
            document.getElementById("jsonInput").value = "";
            document.getElementById("jsonInput").removeAttribute("readonly");
            document.getElementById("pasteButton").disabled = false;
        }


        // ฟังก์ชันการวางข้อความจากคลิปบอร์ด
        function pasteFromClipboard() {
            navigator.clipboard.readText().then(text => {
                // วางข้อความจากคลิปบอร์ดลงใน textarea
                document.getElementById("jsonInput").value = text;
                disableJsonInput(); // ปิดการแก้ไขหลังจากวาง
            }).catch(err => {
                Swal.fire("ไม่สามารถวางข้อความจากคลิปบอร์ดได้");
            });
        }


        // ปิดการแก้ไขใน textarea หลังจากวางข้อความ
        function disableJsonInput() {
            document.getElementById("jsonInput").setAttribute("readonly", true);
            document.getElementById("pasteButton").disabled = true; // ปิดปุ่มวางหลังจากวางข้อความ
        }
    </script>
</body>
</html>



